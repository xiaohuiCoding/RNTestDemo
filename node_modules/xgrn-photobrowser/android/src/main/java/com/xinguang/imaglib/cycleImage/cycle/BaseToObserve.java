package com.xinguang.imaglib.cycleImage.cycle;

import java.util.ArrayList;
import java.util.List;

/**
 * 观察者模式  基类
 * 1、实例化
 * 2、注册
 * 3、取消注册
 * 4、
 *
 * @author wl on 2017/9/7 0007 13:36
 */

public abstract class BaseToObserve<T> {
    private List<T> observes;

    public BaseToObserve() {
        observes = new ArrayList<T>();
    }

    /**
     * 注册
     */
    public void addObserve(T observe) {
        observes.add(observe);
    }

    /**
     * 取消注册某一个
     */
    public void removeObserve(T observe) {
        observes.remove(observe);
    }

    /**
     * 清除所有注册
     */
    public void removeObserveAll() {
        observes.clear();
    }

    /**
     * 分发
     */
    public void dispense(DispenseUtil<T> dispenseUtil) {
        T observe;
        for (int i = 0; i < observes.size(); i++) {
            observe = observes.get(i);
            if (observe != null) {
                dispenseUtil.theEvent(observe);
            }
        }
    }

    public interface DispenseUtil<T> {
        //子类实现 集体的分发事件
        void theEvent(T observe);
    }
}
