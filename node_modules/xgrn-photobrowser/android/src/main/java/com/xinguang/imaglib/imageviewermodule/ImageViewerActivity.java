package com.xinguang.imaglib.imageviewermodule;

import android.content.Intent;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v7.app.AppCompatActivity;
import android.view.Window;
import android.view.WindowManager;

import com.xinguang.imaglib.R;
import com.xinguang.imaglib.cycleImage.cycle.CycleViewDetails;
import com.xinguang.imaglib.cycleImage.cycle.CycleViewZoomManager;

import java.util.ArrayList;

/**
 * 提供图片地址数组  展示图片浏览
 * （未实现）长按下载
 * （未实现）点击大图返回
 * Created by lingwang on 2018/4/19.
 */

public class ImageViewerActivity extends AppCompatActivity implements CycleViewZoomManager.UpVideo {
    CycleViewDetails cycleViewDetails;
    ArrayList<String> video;
    ArrayList<String> pic;
    String address;
    int position;
    CycleViewZoomManager cycleViewZoomManager;//大小屏管理对象

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        //去除标题栏
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        //去除状态栏
        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
                WindowManager.LayoutParams.FLAG_FULLSCREEN);
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_image_viewer);
        initData();
        initAction();
    }


    protected void initData() {
        // imageUrls:[urls],localImages:[Image],startIndex:NSInteger
        cycleViewDetails = (CycleViewDetails) findViewById(R.id.cycle_details);
        Intent intent = getIntent();
        video = intent.getStringArrayListExtra("videos");
        pic = intent.getStringArrayListExtra("pics");
        address = intent.getStringExtra("address");
        position = intent.getIntExtra("position", 0);
        cycleViewDetails.setCycleDatas(video, pic, address);
        cycleViewDetails.setPosition(position);

    }

    protected void initAction() {
        cycleViewZoomManager = CycleViewZoomManager.getInstance();
        //注册
        cycleViewZoomManager.addObserve(this);
    }

    @Override
    public void onBackPressed() {
        cycleViewZoomManager.switchContainer();
        super.onBackPressed();

    }

    @Override
    protected void onDestroy() {
        //清除头部轮播中的监听
        cycleViewZoomManager.removeObserve(this);

        CycleViewZoomManager.getInstance().setCurrPosition(cycleViewDetails.getPosition());
        super.onDestroy();
    }

    @Override
    public void upMin() {
        finish();
    }

    @Override
    public void upMax() {

    }

    @Override
    public void upPosition(int position) {
    }


}
