package com.xg.navigation.delegates;

import android.os.Bundle;
import android.widget.Toast;

import com.xg.navigation.constants.NavigationConstants;
import com.xg.navigation.util.NavigationUtil;
import com.xg.navigation.util.SujectUtils;

import java.util.concurrent.TimeUnit;

import io.reactivex.Flowable;
import io.reactivex.android.schedulers.AndroidSchedulers;
import io.reactivex.functions.Consumer;
import io.reactivex.internal.subscriptions.EmptySubscription;
import io.reactivex.schedulers.Schedulers;

import static java.lang.System.exit;

/**
 * Created by yuanyuan on 18-1-18.
 */

public abstract class NavigationDelegate extends PermissionCheckerDelegate{

    // 再点一次退出程序时间设置
    private static final long WAIT_TIME = 2000L;
    private long TOUCH_TIME = 0;



    @SuppressWarnings("unchecked")
    public <T extends BaseDelegate> T getParentDelegate() {
        return (T) getParentFragment();
    }

    @Override
    public boolean onBackPressedSupport() {

        if (getFragmentManager().getBackStackEntryCount() > 1) {
            return false;
        }

        if (System.currentTimeMillis() - TOUCH_TIME < WAIT_TIME) {
//            _mActivity.finish();
            exit(0);
        } else {
            TOUCH_TIME = System.currentTimeMillis();
            Toast.makeText(_mActivity, "双击退出程序", Toast.LENGTH_LONG).show();
        }
        return true;
    }

    // for js
    public String getJsId() {
        Bundle bundle = getArguments();
        if (bundle == null) {
            return "";
        }
        return bundle.getString("uniqueId");
    }

    // for native
    public String getNativeId() {
        Bundle bundle = getArguments();
        if (bundle == null) {
            return "";
        }
        return bundle.getString(NavigationConstants.NativeNavigationId);
    }


    @Override
    public void onDestroy() {
        Bundle bundle = getArguments();
        if (bundle != null) {
            SujectUtils.getInstance().post(bundle.getString("uniqueId"),bundle.getString("uniqueId"));

        }
        super.onDestroy();

    }

    @Override
    public void onStart() {
        super.onStart();
        Bundle bundle = getArguments();
        NavigationUtil.subscribeUniqueId(bundle.getString("uniqueId"));
    }
}
