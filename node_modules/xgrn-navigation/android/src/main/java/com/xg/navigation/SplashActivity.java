package com.xg.navigation;

import android.content.Intent;
import android.content.SharedPreferences;
import android.net.Uri;
import android.os.Bundle;
import android.text.TextUtils;
import android.util.Log;

import com.facebook.react.ReactActivity;
import com.xg.navigation.constants.NavigationConstants;
import com.xg.navigation.util.NavigationUtil;

import static com.xg.navigation.constants.NavigationConstants.SP_OUTLINK_NAME;
import static com.xg.navigation.constants.NavigationConstants.TARGET_PAGE_TYPE;
import static com.xg.navigation.constants.NavigationConstants.TARGET_PATH;

public abstract class SplashActivity extends ReactActivity {

    public static String MAIN_NAME = "";

    public SplashActivity() {

        String desc = NavigationApplication.instance.isDebug() ? "是debug" : "不是debug";
        Log.d("spy", desc);

        MAIN_NAME = getMainComponentName();
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        outLinkJump();
    }

    /**
     * 获取对应的pagePath
     * @param target
     * @return
     */
    public abstract String getPagePath(String target);

    /**
     * 获取对应的pageType
     * @param target
     * @return
     */
    public abstract String getPageType(String target);

    /**
     * 外部链接跳转处理
     */
    private void outLinkJump(){
        Intent intent = getIntent();
        Uri uri = intent.getData();
        if(null == uri){
            return;
        }
        String pagePath = uri.getQueryParameter("p");
        if(TextUtils.isEmpty(pagePath)){
            // 如果传参没有带targetPath, 那么没必要再进行跳转, 直接结束MainActivity
            finish();
        }

        boolean isNavigationExist = null != NavigationActivity.currentActivity;

        // 目标path
        String targetPath = getPagePath(pagePath);
        // 目标的页面类型
        String targetPageType = getPageType(pagePath);
        if(TextUtils.isEmpty(targetPath) || TextUtils.isEmpty(targetPageType)){
            finish();
        }

        if(isNavigationExist){
            // 如果NavigationActivity已经起来了, 销毁当前的Activity
            // 直接进行跳转的工作
            Bundle params = new Bundle();
            for(String key: uri.getQueryParameterNames()){
                if(!NavigationConstants.PATH_KEY.equals(key)){
                    params.putString(key, uri.getQueryParameter(key));
                }
            }
            NavigationUtil.push(targetPageType, targetPath, NavigationConstants.FROM_RIGHT, true, params);
            finish();
        }else {
            // 进行Uri的保存工作, 交由NavigationActivity来做跳转的动作
            // Uri应该在跳转后, 做消费的动作, 保证下次应用重新起来的时候, 不会再进行外部link的跳转
            SharedPreferences sp = getSharedPreferences(SP_OUTLINK_NAME, MODE_PRIVATE);
            for(String key: uri.getQueryParameterNames()){
                if(!NavigationConstants.PATH_KEY.equals(key)){
                    sp.edit().putString(key, uri.getQueryParameter(key)).apply();
                }
            }
            sp.edit().putString(TARGET_PATH, targetPath).apply();
            sp.edit().putString(TARGET_PAGE_TYPE, targetPageType).apply();
        }
    }
}
