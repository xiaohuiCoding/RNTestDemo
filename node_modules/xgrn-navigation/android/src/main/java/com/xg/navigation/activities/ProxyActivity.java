package com.xg.navigation.activities;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.ActivityCompat;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentationMagician;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.ContentFrameLayout;

import com.facebook.react.ReactInstanceManager;
import com.xg.navigation.R;
import com.xg.navigation.debug.DebugStackDelegate;
import com.xg.navigation.delegates.BaseDelegate;
import com.xg.navigation.delegates.NavigationDelegate;

import java.util.List;
import java.util.ArrayList;

import me.yokeyword.fragmentation.ExtraTransaction;
import me.yokeyword.fragmentation.Fragmentation;
import me.yokeyword.fragmentation.ISupportActivity;
import me.yokeyword.fragmentation.ISupportFragment;
import me.yokeyword.fragmentation.SupportActivityDelegate;
import me.yokeyword.fragmentation.SupportHelper;
import me.yokeyword.fragmentation.anim.DefaultHorizontalAnimator;
import me.yokeyword.fragmentation.anim.FragmentAnimator;

import static java.lang.System.exit;

public abstract class ProxyActivity extends AppCompatActivity implements ISupportActivity{

    private DebugStackDelegate mDebugStackDelegate;
    private final SupportActivityDelegate DELEGATE = new SupportActivityDelegate(this);

    public abstract BaseDelegate setRootDelegate();

    public abstract String setRootTag();

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        DELEGATE.onCreate(savedInstanceState);
        mDebugStackDelegate = new DebugStackDelegate(this);
        mDebugStackDelegate.onCreate(Fragmentation.getDefault().getMode());
        initContainer(savedInstanceState);
    }

    private void initContainer(@Nullable Bundle savedInstanceState) {
        final ContentFrameLayout container = new ContentFrameLayout(this);
        container.setId(R.id.delegate_container);
        setContentView(container);

        BaseDelegate baseDelegate = setRootDelegate();

        if (savedInstanceState == null && baseDelegate != null) {
            DELEGATE.extraTransaction()
                    .setTag(setRootTag())
                    .loadRootFragment(R.id.delegate_container, baseDelegate);
        }
    }

    @Override
    protected void onDestroy() {
        mDebugStackDelegate.onDestroy();
        DELEGATE.onDestroy();
        super.onDestroy();
        System.gc();
        System.runFinalization();
    }

    @Override
    protected void onPostCreate(@Nullable Bundle savedInstanceState) {
        super.onPostCreate(savedInstanceState);
//        DELEGATE.onPostCreate(savedInstanceState);
        mDebugStackDelegate.onPostCreate(Fragmentation.getDefault().getMode());

    }

    @Override
    public SupportActivityDelegate getSupportDelegate() {
        return DELEGATE;
    }

    @Override
    public ExtraTransaction extraTransaction() {
        return DELEGATE.extraTransaction();
    }

    @Override
    public FragmentAnimator getFragmentAnimator() {
        return DELEGATE.getFragmentAnimator();
    }

    @Override
    public void setFragmentAnimator(FragmentAnimator fragmentAnimator) {
        DELEGATE.setFragmentAnimator(new DefaultHorizontalAnimator());
    }

    @Override
    public FragmentAnimator onCreateFragmentAnimator() {
        return DELEGATE.onCreateFragmentAnimator();
    }

    @Override
    public void post(Runnable runnable) {
        DELEGATE.post(runnable);
    }

    @Override
    public void onBackPressedSupport() {
        if (getSupportFragmentManager().getBackStackEntryCount() > 1) {
            DELEGATE.pop();
        } else {
//            ActivityCompat.finishAfterTransition(mActivity);
            exit(0);
        }
    }

    @Override
    public void onBackPressed() {
        DELEGATE.onBackPressed();
    }

    /**
     * 获取子路由
     */
    public List<Fragment> getFragments() {
        List<Fragment> fragments = new ArrayList<>();
        try {
            fragments =  FragmentationMagician.getActiveFragments(getSupportFragmentManager());
        } catch (Exception ignored) {
        }

        return fragments;
    }
}
