//
//  XGTransitionModel.m
//  routedemo
//
//  Created by nuomi on 2018/1/24.
//  Copyright © 2018年 Facebook. All rights reserved.
//

#import "XGTransitionModel.h"

@implementation XGTransitionModel

#pragma mark - UINavigationControllerDelegate Methods

- (nullable id <UIViewControllerAnimatedTransitioning>)navigationController:(UINavigationController *)navigationController
                                            animationControllerForOperation:(UINavigationControllerOperation)operation
                                                         fromViewController:(UIViewController *)fromVC
                                                           toViewController:(UIViewController *)toVC {
  return self;
}

#pragma mark - UIViewControllerAnimatedTransitioning Methods

- (NSTimeInterval)transitionDuration:(nullable id <UIViewControllerContextTransitioning>)transitionContext{
  return 0.35;
}

// This method can only  be a nop if the transition is interactive and not a percentDriven interactive transition.
- (void)animateTransition:(id <UIViewControllerContextTransitioning>)transitionContext{
  
  switch (self.transitionType) {
    case XGTransitionShowFromBottom:
      [self _animateTransitionShowFromBottom:transitionContext];
      break;
    case XGTransitionHideFromTop:
      [self _animateTransitionHideFromTop:transitionContext];
      break;
      
    default:
      break;
  }
  
}

#pragma mark - Inner Methods

- (void)_animateTransitionShowFromBottom:(id <UIViewControllerContextTransitioning>)transitionContext{
  
  UIView* containerView = transitionContext.containerView;
  UIView* toView = [transitionContext viewForKey:UITransitionContextToViewKey];
  [containerView addSubview:toView];
  
  //动画初始状态
  CGAffineTransform toViewTransform = CGAffineTransformMakeTranslation(0, toView.bounds.size.height);
  toView.transform = toViewTransform;
  
  NSTimeInterval duration = [self transitionDuration:transitionContext];
  [UIView animateWithDuration:duration animations:^{
    toView.transform = CGAffineTransformIdentity;
  } completion:^(BOOL finished) {
    toView.transform = CGAffineTransformIdentity;
    BOOL isCancelled = transitionContext.transitionWasCancelled;
    [transitionContext completeTransition:!isCancelled];
  }];
    
}

- (void)_animateTransitionHideFromTop:(id <UIViewControllerContextTransitioning>)transitionContext{
  
  UIView* containerView = transitionContext.containerView;
  UIView* toView = [transitionContext viewForKey:UITransitionContextToViewKey];
  UIView* fromView = [transitionContext viewForKey:UITransitionContextFromViewKey];
  [containerView insertSubview:toView belowSubview:fromView];
  
  //动画初始状态
  fromView.transform = CGAffineTransformIdentity;
  
  CGAffineTransform fromViewTransform = CGAffineTransformMakeTranslation(0, fromView.bounds.size.height);
  
  NSTimeInterval duration = [self transitionDuration:transitionContext];
  [UIView animateWithDuration:duration animations:^{
    fromView.transform = fromViewTransform;
  } completion:^(BOOL finished) {
    fromView.transform = CGAffineTransformIdentity;
    BOOL isCancelled = transitionContext.transitionWasCancelled;
    [transitionContext completeTransition:!isCancelled];
  }];
  
}

@end
