package com.xinguang.imaglib.cycleImage.view;

import android.content.Context;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;

import com.xinguang.imaglib.R;
import com.xinguang.imaglib.cycleImage.utils.ScreenUtil;


/**
 * 需要四个参数
 * context viewpager  line视图  adapter
 *
 * @author wl on 2017/8/15 0015 16:39
 */

public class CycleViewUtils<T extends PagerAdapter> {
    Context context;
    ViewPager mViewPager;
    ViewGroup mGroup;
    T adapter;

    int size;
    /**
     * 图片轮播指示器-个图
     */
    private View mLineView = null;

    /**
     * 滚动图片指示器-视图列表
     */
    private View[] mLineViews = null;
    private int line_ID = R.layout.view_line;
    private int selected_no = R.color.title_selected_no;
    private int selected = R.color.white;

    public CycleViewUtils(Context context, ViewPager viewPager, ViewGroup viewGroup, T adapter,
                          int size) {
        this.context = context;
        this.mViewPager = viewPager;
        this.mGroup = viewGroup;
        this.adapter = adapter;
        // 清除所有子视图
        mGroup.removeAllViews();

        this.size = size;

        mLineViews = new View[size];

        // 图片指示器
        for (int i = 0; i < size; i++) {
            getLineView();
            mLineViews[i] = mLineView;
            if (i == 0) {
                mLineViews[i].setBackgroundResource(getSelected());
            } else {
                mLineViews[i].setBackgroundResource(getSelected_no());
            }
            mGroup.addView(mLineViews[i]);
        }
        mViewPager.setOnPageChangeListener(new GuidePageChangeListener());
        mViewPager.setAdapter(adapter);
//        mViewPager.setCurrentItem(size * 100000);// 设置手扒可轮回时打开
    }

    /**
     * 如果外部对viepager设置了监听，这里的指示器就会失效
     */
    public void setPageSelected(int index) {
        int count = mLineViews.length;

        for (int i = 0; i < count; i++) {
            // 设置图片滚动指示器背景
            // 图片指示器
            if (index % count != i) {
                mLineViews[i % count].setBackgroundResource(getSelected_no());
            } else {
                mLineViews[i % count].setBackgroundResource(getSelected());
            }
        }

    }

    /**
     * 设置line的颜色
     */
    public void setLineColor(int selected, int selected_no) {
        this.selected = selected;
        this.selected_no = selected_no;

    }

    /**
     * 有需求需要修改指示器
     */
    public View getLineView() {
        LinearLayout.LayoutParams layout = new LinearLayout.LayoutParams(LinearLayout
                .LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.WRAP_CONTENT);
        layout.width = ScreenUtil.dip2px(context, 16);
        layout.height = ScreenUtil.dip2px(context, 2);
        layout.setMargins(ScreenUtil.dip2px(context, (float) 2.5), 0, ScreenUtil.dip2px(context,
                (float) 2.5), 0);
        mLineView = LayoutInflater.from(context).inflate(line_ID, null);
        mLineView.setLayoutParams(layout);
        return mLineView;
    }

    public int getSelected_no() {
        return selected_no;
    }

    public int getSelected() {
        return selected;
    }

    /**
     * 轮播图片状态监听器
     *
     * @author minking
     */
    private final class GuidePageChangeListener implements ViewPager.OnPageChangeListener {

        @Override
        public void onPageScrollStateChanged(int state) {

        }

        @Override
        public void onPageScrolled(int arg0, float arg1, int arg2) {
        }

        @Override
        public void onPageSelected(int index) {

            setPageSelected(index);
            if(pageChangeListener!=null){
                pageChangeListener.setPageSelected(index % size);
            }
        }
    }

    /**
     * 添加一个监听，
     */
    public void setPageChangeListener(PageChangeListener p) {
        pageChangeListener = p;
    }

    PageChangeListener pageChangeListener;

   public interface PageChangeListener {
        void setPageSelected(int index);
    }
}
