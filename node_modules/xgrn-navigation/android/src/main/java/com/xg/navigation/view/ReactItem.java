package com.xg.navigation.view;

import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.text.TextUtils;
import android.view.View;

import com.facebook.react.ReactInstanceManager;
import com.facebook.react.ReactRootView;
import com.facebook.react.bridge.ReactContext;
import com.facebook.react.bridge.WritableMap;
import com.facebook.react.modules.core.DeviceEventManagerModule;
import com.xg.navigation.NavigationApplication;
import com.xg.navigation.SplashActivity;
import com.xg.navigation.activities.ProxyActivity;
import com.xg.navigation.bridge.MapConverter;
import com.xg.navigation.delegates.bottom.ReactBottomItemDelegate;

import java.util.Map;

public class ReactItem extends ReactBottomItemDelegate {

    @SuppressWarnings("FieldCanBeLocal")
    private ReactRootView mReactRootView;
    @SuppressWarnings("FieldCanBeLocal")
    private ReactInstanceManager mReactInstanceManager;

    public static ReactItem newInstance(Bundle bundle) {

        if (bundle == null) {
            bundle = new Bundle();
        }

        ReactItem fragment = new ReactItem();
        fragment.setArguments(bundle);
        return fragment;
    }

    @Override
    public Object setLayout() {

        ProxyActivity proxyActivity = getProxyActivity();
        Bundle params = getArguments();
        if (params == null) {
            params = new Bundle();
        }
        params.putBundle("route", generateRoute());

        mReactRootView = new ReactRootView(proxyActivity);
        mReactInstanceManager = ((NavigationApplication)proxyActivity.getApplication()).getReactNativeHost().getReactInstanceManager();
        mReactRootView.startReactApplication(mReactInstanceManager, SplashActivity.MAIN_NAME, params);

        return mReactRootView;
    }

    @Override
    public void onBindView(@Nullable Bundle savedInstanceState, @NonNull View rootView) {

    }

    protected void sendEvent(String eventName, @Nullable WritableMap params) {
        ReactContext reactContext = ((NavigationApplication)getProxyActivity().getApplication()).getReactContext();
        if (reactContext != null) {
            reactContext.getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class)
                    .emit(eventName, params);
        }
    }

    @Override
    public Bundle generateRoute() {
        String pagePath = null, uniqueId = null, pageType = null;
        try {
            Bundle params = getArguments();
            pagePath = params.getString("pagePath");
            pageType = params.getString("pageType");
            uniqueId = params.getString("uniqueId");
        } catch (Exception ignored) {}

        if (TextUtils.isEmpty(pagePath)) {
            pagePath = "";
        }

        if (TextUtils.isEmpty(pageType)) {
            pageType = "";
        }

        if (TextUtils.isEmpty(uniqueId)) {
            uniqueId = "";
        }

        Bundle bundle = new Bundle();
        bundle.putString("pagePath", pagePath);
        bundle.putString("uniqueId", uniqueId);
        bundle.putString("pageType", pageType);
        return bundle;
    }

    @Override
    public Map<String, Object> setNavigationParams() {
        return MapConverter.toMap(getArguments());
    }
}
